{"title":"Data importation","markdown":{"yaml":{"title":"","message":false,"warning":false},"headingText":"Data importation","containsRefs":false,"markdown":"\n\n\nLoad of the packages.\n\n```{r}\nlibrary(bulkreadr)\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(metafor)\nlibrary(psych)\nlibrary(cowplot)\nlibrary(patchwork)\nlibrary(r4pde)\nlibrary(broom)\nlibrary(metafor)\nlibrary(lme4)\nlibrary(writexl)\nlibrary(gsheet)\nlibrary(readxl)\nlibrary(ggdist)\n```\n\nImportation of data and reorganization for the analysis.\n\n```{r, echo=TRUE}\nlsd_2021 <- read_csv(\"lsd2021.csv\")\nlsd_2022 <- read_csv(\"lsd2022.csv\")\nlsd_2023 <- read_csv(\"lsd2023.csv\")\nlsd_2024 <- read_csv(\"lsd2024.csv\")\n\nlsd_combined <- rbind(lsd_2021, lsd_2022, lsd_2023, lsd_2024)\n\nlsd_combined <- lsd_combined |>\n  separate(LOCAL_YEAR, into = c(\"local\", \"year\"), sep = \"_\", remove = FALSE)\n\nlsd_combined$trial <- as.integer(factor(lsd_combined$LOCAL_YEAR, levels = unique(lsd_combined$LOCAL_YEAR)))\n\nlsd_combined <- lsd_combined |> \n  select(LOCAL_YEAR, trial, year, local, trat, sev, yld)\n\nwrite_csv(lsd_combined, \"lsd_combined.csv\")\n```\n\nSee the structure of the data set:\n\n```{r}\nlsd_combined\n```\n\n# Data visualization\n\nSummarizing the data.\n\n```{r}\nlsd_combined_mean <- lsd_combined |> \n  group_by(trat, trial, year, local) |> \n  summarise(mean_sev = mean(sev),\n            mean_yld = mean(yld))\n```\n\n```{r}\na1 <- lsd_combined_mean |> \n  ggplot(aes(mean_sev)) +\n  geom_histogram(binwidth = 3, fill = \"white\", color = \"black\", size = 1) +\n  theme_minimal_hgrid() +\n  labs(x = \"Severity (%)\", y = \"\") +\n  scale_x_continuous(limits = c(0, 100), breaks = c(seq(0, 100, by = 25), 100)) +\n  geom_vline(xintercept = 17.29, size = 1.5, linetype = 2)\n\na2 <- lsd_combined_mean |> \n  ggplot(aes(mean_yld)) +\n  geom_histogram(fill = \"white\", color = \"black\", linewidth = 1)+\n  theme_minimal_hgrid() +\n  labs(x = \"Yield (kg/ha)\", y = \"\") +\n  geom_vline(xintercept = 4220, size = 1.5, linetype = 2)\n\n(a1+a2)\n```\n\n# Individual regressions\n\nVisualizing the regression for each trial.\n\n```{r, echo=TRUE}\nlsd_combined_mean |> \n  ggplot(aes(mean_sev, mean_yld))+\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\", fullrange = TRUE) +\n  geom_point(color = \"black\", shape = 1) +\n  facet_wrap(~trial,\n             ncol = 5) +\n  scale_y_continuous(limits = c(0, 6000)) +\n  scale_x_continuous(limits = c(0, 100)) +\n  theme_cowplot() +\n  labs(y = \"Yield (kg/ha)\", x = \"Severity (%)\")\n\n```\n\nLet’s see all the regression lines in the same plot.\n\n```{r}\nr_regression = lsd_combined %>%\n  filter(sev != \"NA\") %>%\n  filter(!yld == \"NA\") %>%\n  dplyr::select( sev, yld, LOCAL_YEAR) %>%\n  do({\n    model <- lm(.$yld ~ .$sev + factor(.$LOCAL_YEAR))\n    tidy_model <- tidy(model)\n    confint_model <- confint(model)  # Calcula os intervalos de confiança\n    bind_cols(tidy_model, confint_model)\n  })\n\nr_regression = r_regression |> \nfilter(term %in% c(\"(Intercept)\",\".$sev\"))\n \nr_regression[r_regression$term== \"(Intercept)\",c(\"parameters\")] <- \"Intercept\"\nr_regression[r_regression$term== \".$sev\",c(\"parameters\")] <- \"Slope\"\n\ni <- 1\n while (i <= nrow(r_regression)) {\n  if (r_regression$parameters[i] == \"Slope\" && r_regression$estimate[i] > 0) {\n    r_regression <- r_regression[-c(i, i - 1), ]\n    i <- i - 2\n  }\n  i <- i + 1\n  }\n\ncolnames(r_regression) = c(\"term\", \"estimate\", \"std.error\", \"statistic\", \"p.value\", \"low\", \"high\", \"parameters\")\nr_regression = r_regression |> \nfilter(term %in% c(\"(Intercept)\",\".$sev\"))\nr_regression$pil <- c(3074.0281, -43.8480)\nr_regression$piu <- c(6104.0960, -1.3186)\n```\n\n\n```{r}\nr_regression = lsd_combined %>%\n  filter(sev != \"NA\") %>%\n  filter(!yld == \"NA\") %>%\n  dplyr::select(sev, yld, LOCAL_YEAR) %>%\n  group_by(LOCAL_YEAR) %>%\n  do({\n    model <- lm(.$yld ~ .$sev)\n    tidy_model <- tidy(model)\n    confint_model <- confint(model)  \n    bind_cols(tidy_model, confint_model)\n  })\n\nr_regression = r_regression |> \nfilter(term %in% c(\"(Intercept)\",\".$sev\"))\n \nr_regression[r_regression$term== \"(Intercept)\",c(\"parameters\")] <- \"Intercept\"\nr_regression[r_regression$term== \".$sev\",c(\"parameters\")] <- \"Slope\"\n\ni <- 1\n while (i <= nrow(r_regression)) {\n  if (r_regression$parameters[i] == \"Slope\" && r_regression$estimate[i] > 0) {\n    # Remove a linha do Slope e a linha do Intercept correspondente\n    r_regression <- r_regression[-c(i, i - 1), ]\n    # Atualiza o índice, pois duas linhas foram removidas\n    i <- i - 2\n  }\n  i <- i + 1\n }\n\nslope_coefficient = r_regression |> \n  filter(parameters == \"Slope\") |> \n  group_by(LOCAL_YEAR) |> \n  summarise(\n    Slope = estimate\n  )\n\nslope_coefficient[,1] = NULL\n\nslope_coefficient |> \n  filter(!Slope == \"NA\") |> \n  summarise(\nmean = mean(Slope))\n\nintercept_coefficient = r_regression |> \n  filter(parameters == \"Intercept\") |>\n  group_by(LOCAL_YEAR) |> \n  summarise(\n    Intercept = estimate\n  )\nintercept_coefficient[,1] = NULL\n\nmean(intercept_coefficient$Intercept)\nsd(intercept_coefficient$Intercept)\n\nregression = cbind(slope_coefficient,intercept_coefficient)\n```\n\n```{r}\nggplot() +\n  geom_point(aes(x = 0:100, y = seq(0,7000,by = 70)), color = NA)+\n   scale_y_continuous(breaks = c(0, 1000,2000,3000, 4000,5000,6000,7000), \n                     limits = c(0, 7000))+\n  geom_abline(data = regression, aes(slope = Slope, intercept = Intercept), size = 1, alpha = 0.5, color = \"gray\")+\n  labs(x = \"LSD Severity (%)\", y = \"Yield (kg/ha) \")+\n  theme_classic()+\n  theme(text = element_text(size = 20),\n        axis.text.x = element_text(size = 18),   \n        axis.text.y = element_text(size = 18))\n```\nNow, let's see a population-average prediction (solid black line) with the corresponding 95% confidence interval (dashed black lines) and 95% prediction interval (dashed gray lines):\n\n```{r}\nr_regression2 = lsd_combined %>%\n  filter(sev != \"NA\") %>%\n  filter(!yld == \"NA\") %>%\n  dplyr::select( sev, yld, LOCAL_YEAR) %>%\n  do({\n    model <- lm(.$yld ~ .$sev + factor(.$LOCAL_YEAR))\n    tidy_model <- tidy(model)\n    confint_model <- confint(model)  # Calcula os intervalos de confiança\n    bind_cols(tidy_model, confint_model)\n  })\n\n\nr_regression2 = r_regression2 |> \nfilter(term %in% c(\"(Intercept)\",\".$sev\"))\n \nr_regression2[r_regression2$term== \"(Intercept)\",c(\"parameters\")] <- \"Intercept\"\nr_regression2[r_regression2$term== \".$sev\",c(\"parameters\")] <- \"Slope\"\n\ni <- 1\n while (i <= nrow(r_regression2)) {\n  if (r_regression2$parameters[i] == \"Slope\" && r_regression2$estimate[i] > 0) {\n    r_regression2 <- r_regression2[-c(i, i - 1), ]\n    i <- i - 2\n  }\n  i <- i + 1\n }\n\ncolnames(r_regression2) = c(\"term\", \"estimate\", \"std.error\", \"statistic\", \"p.value\", \"low\", \"high\", \"parameters\")\nr_regression2 = r_regression2 |> \nfilter(term %in% c(\"(Intercept)\",\".$sev\"))\n\nr_regression2$pil <- c(3074.0281, -43.8480)\nr_regression2$piu <- c(6104.0960, -1.3186)\n```\n\n\n```{r}\nlsd_combined |> \n ggplot(aes(sev, yld)) +\n  geom_point(color = \"NA\")+\n  scale_y_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000), \n                     limits = c(2000, 7000))+\n  scale_x_continuous(breaks = c(0, 25, 50, 75, 100),\n                     limits = c(0, 100))+\n  geom_abline(data =r_regression2, aes(slope = estimate[2], intercept = estimate[1]), size = 1.5, color = \"black\")+\n  geom_abline(data = r_regression2, aes(intercept = high[1], slope = high[2]), size = .51, linetype = 2)+ #upper ci\n  geom_abline(data = r_regression2, aes(intercept = low[1], slope = low[2]), size = .51, linetype = 2)+ #low ci\n  geom_abline(data = r_regression2, aes(intercept = piu[1], slope = piu[2]), size = 2, linetype = 2, color = \"darkgray\")+ #upper pi\n  geom_abline(data = r_regression2, aes(intercept = pil[1], slope = pil[2]), size = 2, linetype = 2, color = \"darkgray\")+ #low pi\n  labs(x = \"LSD Severity (%)\", y = \"Yield (kg/ha) \")+\n  theme_classic()+\n  theme(text = element_text(size = 20),\n        axis.text.x = element_text(size = 18),   \n        axis.text.y = element_text(size = 18))\n```\n\n\n# Meta-analytic models\n\nTo be included in the analysis, trials had to show a minimum difference of 5 percentage points between the lowest and highest disease severity within the study.\n\n```{r}\nsev_dif <- lsd_combined |> \n  group_by(trial) |> \n  summarize(sev_max = max(sev, na.rm = TRUE),\n            sev_min = min(sev, na.rm = TRUE),\n            sev_difference = sev_max - sev_min)\n\n# none with difference of sev < 5%\n```\n\nAs none of the trials had a difference of sev \\< 5, all trials were used in meta-analysis.\n\n## Correlation\n\nIn this section we are going to analyse if there is correlation between the DFC's severity at the field and the soybean yield.\n\n### Preparation of the data\n\nFor the meta-analytic analysis, it is necessary to prepare the data and calculate the Pearson's correlations (r) between disease severity and yield for each study in the data. These calculated Pearson correlations will be transformed using Fisher's Z (Z) transformation to normalize the distribution of the data. Additionally, the variance (V) will be calculated.\n\n```{r}\ncorrelation_data <- lsd_combined %>%\n  group_by(LOCAL_YEAR) %>%\n  summarise(r_sev_yld = cor(sev, yld),\n            n = n(),\n            Z_sev_yld = 0.5*log((1+r_sev_yld)/(1-r_sev_yld)),\n            V = 1/(n-3),\n            vd_sev_yld = 1/(2*(1-r_sev_yld)/n-3)) |> \n  filter(r_sev_yld != \"NA\") |> \n  filter(n > 4)\n```\n\n### Correlations analysis\n\nNow we are going to calculate the mean correlation utilizing the meta-analytic approach before used by Dalla Lana et al. (2015).\n\n```{r}\nmeta_cor_sev_yld <- rma(Z_sev_yld, V, data = correlation_data)\nmeta_cor_sev_yld\n```\n\n```{r}\nZ_sev_yld <- meta_cor_sev_yld$b\n\nmetafor::predict.rma(meta_cor_sev_yld)\n\nR_sev_yld <- fisherz2r(Z_sev_yld)\nR_sev_yld\n```\n\n```{r}\npredict(meta_cor_sev_yld, transf = transf.ztor)\n```\n\n### Graphics r correlation\n\n```{r}\nr_sev_yld <- correlation_data %>% \n  ggplot(aes(r_sev_yld)) +\n  geom_histogram(bins = 10,\n                 color = \"black\",\n                 fill = \"white\",\n                 alpha = 0.5,\n                 size = 1) +\n  ylab(\"Frequency\") +\n  xlab(expression(\"Pearson's correlation coefficient (\" * italic(r) * \")\")) +\n  theme_minimal_hgrid()\n\nr_sev_yld\n\nZ_sev_yld <- correlation_data %>% \n  ggplot(aes(Z_sev_yld))+\n  geom_histogram(bins = 10,\n                 color = \"black\",\n                 fill = \"white\",\n                 alpha = 0.5,\n                 size = 1) +\n  ylab(\"Frequency\") +\n   xlab(expression(\"Fisher's transformation of (\" * italic(r) * \") (\" * italic(Z) * \")\")) +\n  theme_minimal_hgrid()\n\nZ_sev_yld\n\n\n(r_sev_yld | Z_sev_yld)\n\n```\n\n## Random effects models\n\n```{r}\n# individual regressions\nfit_all <- lsd_combined%>%\n  group_by(LOCAL_YEAR) |> \n  do(broom::tidy(lm(.$yld ~ .$sev), conf.int=TRUE))\nsummary(fit_all)\n```\n\n\n```{r}\n# data preparation\nIntercepts <- fit_all |> \n  filter(term == \"(Intercept)\")\nSlopes <-  fit_all |> \n  filter(term == \".$sev\")\n```\n\n```{r}\n# Model for the intercepts\ndfc1 <- rma(yi = estimate, sei = std.error, data = Intercepts)\nsummary(dfc1)\n\nmetafor::predict.rma(dfc1)\n```\n\n```{r}\n# Model for the slopes\ndfc2 <- rma(yi = estimate, sei = std.error, data = Slopes)\nsummary(dfc2)\nmetafor::predict.rma(dfc2)\n```\n\n```{r}\nb1 <- fit_all |> \n  filter(term == \"(Intercept)\") |> \n  ggplot(aes(x = estimate))+\n  geom_histogram(bins = 15, color = \"black\", fill = \"white\", alpha = 0.5, size = 1)+\n  theme_minimal_hgrid()+\n  labs(x = \"Intercept\", y = \"Frequency\") +\n  theme(\n    axis.title.x = element_text(size = 20),\n    axis.title.y = element_text(size = 20),\n    axis.text.x = element_text(size = 18),   \n    axis.text.y = element_text(size = 18))\n\nb2 <- fit_all |> \n  filter(term == \".$sev\") |> \n  ggplot(aes(x = estimate))+\n  geom_histogram(bins = 15, color = \"black\", fill = \"white\", alpha = 0.5, size = 1)+\n  theme_minimal_hgrid()+\n  labs(x = \"Slope\", y = \"Frequency\")+\n   theme(\n    axis.title.x = element_text(size = 20), \n    axis.title.y = element_text(size = 20), \n    axis.text.x = element_text(size = 16),   \n    axis.text.y = element_text(size = 16))\n\n(b1 + b2)\n```\n\nLet's make a forest plot that shows the distribution of the ꞵ1:\n\n```{r}\nSlopes2 <- Slopes \nSlopes2$ENUM_LOCAL_YEAR <- as.integer(factor(Slopes2$LOCAL_YEAR, levels = unique(Slopes2$LOCAL_YEAR)))\n\nSlopes2 |> \n  ggplot(aes(reorder(ENUM_LOCAL_YEAR, +estimate), estimate)) +\n  geom_point(size = 3) +\n  geom_errorbar(aes(ymin = conf.low,\n                    ymax = conf.high),\n                width = 0.5,\n                linetype = \"solid\") +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"black\") +\n  labs(x = \"Study\", y = \"Slope\")+\n   theme_half_open()+\n  coord_flip()+\n  theme(text = element_text(size = 20),\n        axis.text.x = element_text(size = 18),   \n        axis.text.y = element_text(size = 13))\n```\n\n\n## Moderator variables\n\nDisease pressure (low severity = ≤35% and high severity = \\>35%), yield class (low = ≤3,745 kg/ha and high = \\>3,745 kg/ha), region (trials conducted below 20°S were classified as south, and others as north), altitude (\\<635 m or ≥635 m above sea level), and year were included as categorical moderators that could explain at least part of the observed heterogeneity and expanded the model from a random to a mixed effects model.\n\n```{r}\nmoderators <- read_csv(\"moderators.csv\")\nclass_df <- moderators[, c(\"LOCAL_YEAR\", \"yield_class\", \"sev_class\", \"region_class\", \"altitude_class\", \"YEAR\")]\n\n\n#preparing data: INTERCEPTS\nint_class <- left_join(Intercepts, class_df, by = \"LOCAL_YEAR\")\n\nint_class <- int_class |> \n  group_by(LOCAL_YEAR) |> \n  mutate(mean_estimate = mean(estimate)) |> \n  distinct(LOCAL_YEAR, .keep_all = TRUE)\n\n\n#preparing data: SLOPES\nslope_class <- left_join(Slopes, class_df, by = \"LOCAL_YEAR\")\n\nslope_class <- slope_class |> \n  group_by(LOCAL_YEAR) |> \n  mutate(mean_estimate = mean(estimate)) |> \n  distinct(LOCAL_YEAR, .keep_all = TRUE)\n\n```\n\n## Yield Class\n\n```{r}\n# Intercept\n\nlsd1 <- rma(yi = estimate ~ factor(yield_class), sei = std.error, data = int_class)\nsummary(lsd1)\n\n# Slope\n\nlsd2 <- rma(yi = estimate ~ factor(yield_class), sei = std.error, data = slope_class)\nsummary(lsd2)\n\n```\n\n## Sev Class\n\n\n```{r}\n# Intercept\n\nlsd3 <- rma(yi = estimate ~ factor(sev_class), sei = std.error, data = int_class)\nsummary(lsd3)\n\n# Slope\n\nlsd4 <- rma(yi = estimate ~ factor(sev_class), sei = std.error, data = slope_class)\nsummary(lsd4)\n```\n\n\n## Region Class\n\n```{r}\n# Intercept\n\nlsd5 <- rma(yi = estimate ~ factor(region_class), sei = std.error, data = int_class)\nsummary(lsd5)\n\n# Slope\n\nlsd6 <- rma(yi = estimate ~ factor(region_class), sei = std.error, data = slope_class)\nsummary(lsd6)\n```\n\n## Altitude Class\n\n\n```{r}\n# Intercept\n\nlsd7 <- rma(yi = estimate ~ factor(altitude_class), sei = std.error, data = int_class)\nsummary(lsd7)\n\n# Slope\n\nlsd8 <- rma(yi = estimate ~ factor(altitude_class), sei = std.error, data = slope_class)\nsummary(lsd8)\n```\n\n## Year\n\n```{r}\n# Intercept\n\nlsd9 <- rma(yi = estimate ~ factor(YEAR), sei = std.error, data = int_class)\nsummary(lsd9)\n\n# Slope\n\nlsd10 <- rma(yi = estimate ~ factor(YEAR), sei = std.error, data = slope_class)\nsummary(lsd10)\n```\n\n# Relative damage loss\n\nBased on the overall mean of the intercept (β0 = 4,589.06 kg/ha) and the slope (β1 = -22.58 kg/ha) estimated by the random-effects model, the overall relative damage coefficient was estimated at -0.49%.As a example, let's suppose that to achieve a relative yield of 80%, corresponding to a 20% reduction in yield (yield loss), the severity of LSD would need to reach approximately 40.6%. \n\n```{r}\ndf <- data.frame(sev = (seq(0, 100, by = 5)))\ndf$yield <- 4589.0620 - 22.5833 * df$sev\ndf$relative <- df$yield *100 / 4589.06\n\ndf |> \n ggplot(aes(sev, relative)) +\n  geom_smooth(method = (lm), se = FALSE, color = \"black\", fullrange = TRUE)+\n  scale_y_continuous(breaks = c(20, 40, 60, 80, 100), \n                     limits = c(20, 100),\n                     expand = c(0, 0))+\n  scale_x_continuous(breaks = c(0, 25, 50, 75, 100),\n                     limits = c(0, 100),\n                     expand = c(0, 0))+\n  labs(x = \"LSD Severity (%)\", y = \"Relative yield (%) \")+\n  geom_hline(yintercept = 80,\n             linetype = 2)+\n  geom_vline(xintercept = c(40.647032772), linetype = 2)+\n  theme_classic()+\n  theme(text = element_text(size = 20),\n        axis.text.x = element_text(size = 18),   \n        axis.text.y = element_text(size = 18))\n```\n\n\n\n# Economic damage threshold\n\n```{r}\n# Function to Simulate EDC\n\nsimula_LDE <- function(n, media_rp, sd_rp, eficacia, cd_base, custo_range, preco_range) {\n  simulacoes <- tibble(\n    rendimento_potencial = rnorm(n, media_rp, sd_rp),\n    custo_controle = runif(n, custo_range[1], custo_range[2]),\n    preco_produto = runif(n, preco_range[1], preco_range[2]),\n    eficacia = eficacia\n  ) %>% \n    mutate(\n      coeficiente_dano = cd_base * rendimento_potencial,\n      LDE = (custo_controle / (preco_produto * coeficiente_dano)) * eficacia\n    )\n  return(simulacoes)\n}\n\n\nn = 5000 # number of simulations\nmedia_rp = 4.6 # in ton/ha\nsd_rp = 0.79  # SD of attainable yield\neficacia = rnorm(5000, 0.54, 0.1) #  in proportion\ncd_base = 0.0049 # 0.49  / 100 -> %/ton\ncusto_range = c(25, 25) # cust of control (US$)\npreco_range = c(393.22, 393.22) # soybean price (US$)\n\n# run the simulation\nsimula <- simula_LDE(n, media_rp, sd_rp, eficacia, cd_base, custo_range, preco_range)\n```\n\n\n```{r}\n# Make the plots:\n\nsimula$median_LDE <- median(simula$LDE)\nsimula$mean_LDE <- mean(simula$LDE)\n\n# Calculate the 95% confidence interval of EDT\nsimula$ci_lower <- quantile(simula$LDE, probs = 0.025)\nsimula$ci_upper <- quantile(simula$LDE, probs = 0.975)\n\n# Plot:\n\nggplot(simula, aes(x = LDE)) +\n  stat_halfeye(fill = \"darkorange\", alpha = 0.7) +\n  geom_vline(aes(xintercept = median_LDE), color = \"red\", linetype = \"dashed\", size = 1) +\n    labs(title = paste(\"Median EDT:\", round(simula$median_LDE, 2), \"\\n95% CI: [\", round(simula$ci_lower, 2), \", \", round(simula$ci_upper, 2), \"]\"),\n       x = \"Economic Damage Threshold (EDT)\",\n       y = \"Density\") +\n    theme_classic(base_size = 16)\n\ni1 <- ggplot(simula, aes(x = LDE)) +\n  stat_halfeye(fill = \"darkorange\", alpha = 0.7) +\n  geom_vline(aes(xintercept = median(LDE)), color = \"red\", linetype = \"dashed\", size = 1) +\n  annotate(\"text\", x = 3.2, y = 0.90, label = \"Median = 1.54%\", color = \"black\", size = 4.5) +\n  annotate(\"text\", x = 3.2, y = 0.85, label = \"95% CI = 0.89%, 2.53%\", color = \"black\", size = 4.5) +\n  labs(\n    x = \"Economic Damage Threshold (EDT)\",\n    y = \"Density\"\n  ) +\n  theme_classic(base_size = 16)\n\n\ni2 <-simula |> \n  ggplot(aes(rendimento_potencial, eficacia, color = LDE ))+\n  geom_point()+\n  scale_color_viridis_c(labels = scales::number_format(accuracy = 0.1))+\n   labs(color = \"EDT\",\n     x = \"Attainable yield (ton/ha)\",\n       y = \"Fungicide efficacy (%)\") +\n    theme_classic(base_size = 16)\n\ni1+i2+\n  plot_annotation(tag_levels = \"A\")\n```\n","srcMarkdownNoYaml":"\n\n# Data importation\n\nLoad of the packages.\n\n```{r}\nlibrary(bulkreadr)\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(metafor)\nlibrary(psych)\nlibrary(cowplot)\nlibrary(patchwork)\nlibrary(r4pde)\nlibrary(broom)\nlibrary(metafor)\nlibrary(lme4)\nlibrary(writexl)\nlibrary(gsheet)\nlibrary(readxl)\nlibrary(ggdist)\n```\n\nImportation of data and reorganization for the analysis.\n\n```{r, echo=TRUE}\nlsd_2021 <- read_csv(\"lsd2021.csv\")\nlsd_2022 <- read_csv(\"lsd2022.csv\")\nlsd_2023 <- read_csv(\"lsd2023.csv\")\nlsd_2024 <- read_csv(\"lsd2024.csv\")\n\nlsd_combined <- rbind(lsd_2021, lsd_2022, lsd_2023, lsd_2024)\n\nlsd_combined <- lsd_combined |>\n  separate(LOCAL_YEAR, into = c(\"local\", \"year\"), sep = \"_\", remove = FALSE)\n\nlsd_combined$trial <- as.integer(factor(lsd_combined$LOCAL_YEAR, levels = unique(lsd_combined$LOCAL_YEAR)))\n\nlsd_combined <- lsd_combined |> \n  select(LOCAL_YEAR, trial, year, local, trat, sev, yld)\n\nwrite_csv(lsd_combined, \"lsd_combined.csv\")\n```\n\nSee the structure of the data set:\n\n```{r}\nlsd_combined\n```\n\n# Data visualization\n\nSummarizing the data.\n\n```{r}\nlsd_combined_mean <- lsd_combined |> \n  group_by(trat, trial, year, local) |> \n  summarise(mean_sev = mean(sev),\n            mean_yld = mean(yld))\n```\n\n```{r}\na1 <- lsd_combined_mean |> \n  ggplot(aes(mean_sev)) +\n  geom_histogram(binwidth = 3, fill = \"white\", color = \"black\", size = 1) +\n  theme_minimal_hgrid() +\n  labs(x = \"Severity (%)\", y = \"\") +\n  scale_x_continuous(limits = c(0, 100), breaks = c(seq(0, 100, by = 25), 100)) +\n  geom_vline(xintercept = 17.29, size = 1.5, linetype = 2)\n\na2 <- lsd_combined_mean |> \n  ggplot(aes(mean_yld)) +\n  geom_histogram(fill = \"white\", color = \"black\", linewidth = 1)+\n  theme_minimal_hgrid() +\n  labs(x = \"Yield (kg/ha)\", y = \"\") +\n  geom_vline(xintercept = 4220, size = 1.5, linetype = 2)\n\n(a1+a2)\n```\n\n# Individual regressions\n\nVisualizing the regression for each trial.\n\n```{r, echo=TRUE}\nlsd_combined_mean |> \n  ggplot(aes(mean_sev, mean_yld))+\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\", fullrange = TRUE) +\n  geom_point(color = \"black\", shape = 1) +\n  facet_wrap(~trial,\n             ncol = 5) +\n  scale_y_continuous(limits = c(0, 6000)) +\n  scale_x_continuous(limits = c(0, 100)) +\n  theme_cowplot() +\n  labs(y = \"Yield (kg/ha)\", x = \"Severity (%)\")\n\n```\n\nLet’s see all the regression lines in the same plot.\n\n```{r}\nr_regression = lsd_combined %>%\n  filter(sev != \"NA\") %>%\n  filter(!yld == \"NA\") %>%\n  dplyr::select( sev, yld, LOCAL_YEAR) %>%\n  do({\n    model <- lm(.$yld ~ .$sev + factor(.$LOCAL_YEAR))\n    tidy_model <- tidy(model)\n    confint_model <- confint(model)  # Calcula os intervalos de confiança\n    bind_cols(tidy_model, confint_model)\n  })\n\nr_regression = r_regression |> \nfilter(term %in% c(\"(Intercept)\",\".$sev\"))\n \nr_regression[r_regression$term== \"(Intercept)\",c(\"parameters\")] <- \"Intercept\"\nr_regression[r_regression$term== \".$sev\",c(\"parameters\")] <- \"Slope\"\n\ni <- 1\n while (i <= nrow(r_regression)) {\n  if (r_regression$parameters[i] == \"Slope\" && r_regression$estimate[i] > 0) {\n    r_regression <- r_regression[-c(i, i - 1), ]\n    i <- i - 2\n  }\n  i <- i + 1\n  }\n\ncolnames(r_regression) = c(\"term\", \"estimate\", \"std.error\", \"statistic\", \"p.value\", \"low\", \"high\", \"parameters\")\nr_regression = r_regression |> \nfilter(term %in% c(\"(Intercept)\",\".$sev\"))\nr_regression$pil <- c(3074.0281, -43.8480)\nr_regression$piu <- c(6104.0960, -1.3186)\n```\n\n\n```{r}\nr_regression = lsd_combined %>%\n  filter(sev != \"NA\") %>%\n  filter(!yld == \"NA\") %>%\n  dplyr::select(sev, yld, LOCAL_YEAR) %>%\n  group_by(LOCAL_YEAR) %>%\n  do({\n    model <- lm(.$yld ~ .$sev)\n    tidy_model <- tidy(model)\n    confint_model <- confint(model)  \n    bind_cols(tidy_model, confint_model)\n  })\n\nr_regression = r_regression |> \nfilter(term %in% c(\"(Intercept)\",\".$sev\"))\n \nr_regression[r_regression$term== \"(Intercept)\",c(\"parameters\")] <- \"Intercept\"\nr_regression[r_regression$term== \".$sev\",c(\"parameters\")] <- \"Slope\"\n\ni <- 1\n while (i <= nrow(r_regression)) {\n  if (r_regression$parameters[i] == \"Slope\" && r_regression$estimate[i] > 0) {\n    # Remove a linha do Slope e a linha do Intercept correspondente\n    r_regression <- r_regression[-c(i, i - 1), ]\n    # Atualiza o índice, pois duas linhas foram removidas\n    i <- i - 2\n  }\n  i <- i + 1\n }\n\nslope_coefficient = r_regression |> \n  filter(parameters == \"Slope\") |> \n  group_by(LOCAL_YEAR) |> \n  summarise(\n    Slope = estimate\n  )\n\nslope_coefficient[,1] = NULL\n\nslope_coefficient |> \n  filter(!Slope == \"NA\") |> \n  summarise(\nmean = mean(Slope))\n\nintercept_coefficient = r_regression |> \n  filter(parameters == \"Intercept\") |>\n  group_by(LOCAL_YEAR) |> \n  summarise(\n    Intercept = estimate\n  )\nintercept_coefficient[,1] = NULL\n\nmean(intercept_coefficient$Intercept)\nsd(intercept_coefficient$Intercept)\n\nregression = cbind(slope_coefficient,intercept_coefficient)\n```\n\n```{r}\nggplot() +\n  geom_point(aes(x = 0:100, y = seq(0,7000,by = 70)), color = NA)+\n   scale_y_continuous(breaks = c(0, 1000,2000,3000, 4000,5000,6000,7000), \n                     limits = c(0, 7000))+\n  geom_abline(data = regression, aes(slope = Slope, intercept = Intercept), size = 1, alpha = 0.5, color = \"gray\")+\n  labs(x = \"LSD Severity (%)\", y = \"Yield (kg/ha) \")+\n  theme_classic()+\n  theme(text = element_text(size = 20),\n        axis.text.x = element_text(size = 18),   \n        axis.text.y = element_text(size = 18))\n```\nNow, let's see a population-average prediction (solid black line) with the corresponding 95% confidence interval (dashed black lines) and 95% prediction interval (dashed gray lines):\n\n```{r}\nr_regression2 = lsd_combined %>%\n  filter(sev != \"NA\") %>%\n  filter(!yld == \"NA\") %>%\n  dplyr::select( sev, yld, LOCAL_YEAR) %>%\n  do({\n    model <- lm(.$yld ~ .$sev + factor(.$LOCAL_YEAR))\n    tidy_model <- tidy(model)\n    confint_model <- confint(model)  # Calcula os intervalos de confiança\n    bind_cols(tidy_model, confint_model)\n  })\n\n\nr_regression2 = r_regression2 |> \nfilter(term %in% c(\"(Intercept)\",\".$sev\"))\n \nr_regression2[r_regression2$term== \"(Intercept)\",c(\"parameters\")] <- \"Intercept\"\nr_regression2[r_regression2$term== \".$sev\",c(\"parameters\")] <- \"Slope\"\n\ni <- 1\n while (i <= nrow(r_regression2)) {\n  if (r_regression2$parameters[i] == \"Slope\" && r_regression2$estimate[i] > 0) {\n    r_regression2 <- r_regression2[-c(i, i - 1), ]\n    i <- i - 2\n  }\n  i <- i + 1\n }\n\ncolnames(r_regression2) = c(\"term\", \"estimate\", \"std.error\", \"statistic\", \"p.value\", \"low\", \"high\", \"parameters\")\nr_regression2 = r_regression2 |> \nfilter(term %in% c(\"(Intercept)\",\".$sev\"))\n\nr_regression2$pil <- c(3074.0281, -43.8480)\nr_regression2$piu <- c(6104.0960, -1.3186)\n```\n\n\n```{r}\nlsd_combined |> \n ggplot(aes(sev, yld)) +\n  geom_point(color = \"NA\")+\n  scale_y_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000), \n                     limits = c(2000, 7000))+\n  scale_x_continuous(breaks = c(0, 25, 50, 75, 100),\n                     limits = c(0, 100))+\n  geom_abline(data =r_regression2, aes(slope = estimate[2], intercept = estimate[1]), size = 1.5, color = \"black\")+\n  geom_abline(data = r_regression2, aes(intercept = high[1], slope = high[2]), size = .51, linetype = 2)+ #upper ci\n  geom_abline(data = r_regression2, aes(intercept = low[1], slope = low[2]), size = .51, linetype = 2)+ #low ci\n  geom_abline(data = r_regression2, aes(intercept = piu[1], slope = piu[2]), size = 2, linetype = 2, color = \"darkgray\")+ #upper pi\n  geom_abline(data = r_regression2, aes(intercept = pil[1], slope = pil[2]), size = 2, linetype = 2, color = \"darkgray\")+ #low pi\n  labs(x = \"LSD Severity (%)\", y = \"Yield (kg/ha) \")+\n  theme_classic()+\n  theme(text = element_text(size = 20),\n        axis.text.x = element_text(size = 18),   \n        axis.text.y = element_text(size = 18))\n```\n\n\n# Meta-analytic models\n\nTo be included in the analysis, trials had to show a minimum difference of 5 percentage points between the lowest and highest disease severity within the study.\n\n```{r}\nsev_dif <- lsd_combined |> \n  group_by(trial) |> \n  summarize(sev_max = max(sev, na.rm = TRUE),\n            sev_min = min(sev, na.rm = TRUE),\n            sev_difference = sev_max - sev_min)\n\n# none with difference of sev < 5%\n```\n\nAs none of the trials had a difference of sev \\< 5, all trials were used in meta-analysis.\n\n## Correlation\n\nIn this section we are going to analyse if there is correlation between the DFC's severity at the field and the soybean yield.\n\n### Preparation of the data\n\nFor the meta-analytic analysis, it is necessary to prepare the data and calculate the Pearson's correlations (r) between disease severity and yield for each study in the data. These calculated Pearson correlations will be transformed using Fisher's Z (Z) transformation to normalize the distribution of the data. Additionally, the variance (V) will be calculated.\n\n```{r}\ncorrelation_data <- lsd_combined %>%\n  group_by(LOCAL_YEAR) %>%\n  summarise(r_sev_yld = cor(sev, yld),\n            n = n(),\n            Z_sev_yld = 0.5*log((1+r_sev_yld)/(1-r_sev_yld)),\n            V = 1/(n-3),\n            vd_sev_yld = 1/(2*(1-r_sev_yld)/n-3)) |> \n  filter(r_sev_yld != \"NA\") |> \n  filter(n > 4)\n```\n\n### Correlations analysis\n\nNow we are going to calculate the mean correlation utilizing the meta-analytic approach before used by Dalla Lana et al. (2015).\n\n```{r}\nmeta_cor_sev_yld <- rma(Z_sev_yld, V, data = correlation_data)\nmeta_cor_sev_yld\n```\n\n```{r}\nZ_sev_yld <- meta_cor_sev_yld$b\n\nmetafor::predict.rma(meta_cor_sev_yld)\n\nR_sev_yld <- fisherz2r(Z_sev_yld)\nR_sev_yld\n```\n\n```{r}\npredict(meta_cor_sev_yld, transf = transf.ztor)\n```\n\n### Graphics r correlation\n\n```{r}\nr_sev_yld <- correlation_data %>% \n  ggplot(aes(r_sev_yld)) +\n  geom_histogram(bins = 10,\n                 color = \"black\",\n                 fill = \"white\",\n                 alpha = 0.5,\n                 size = 1) +\n  ylab(\"Frequency\") +\n  xlab(expression(\"Pearson's correlation coefficient (\" * italic(r) * \")\")) +\n  theme_minimal_hgrid()\n\nr_sev_yld\n\nZ_sev_yld <- correlation_data %>% \n  ggplot(aes(Z_sev_yld))+\n  geom_histogram(bins = 10,\n                 color = \"black\",\n                 fill = \"white\",\n                 alpha = 0.5,\n                 size = 1) +\n  ylab(\"Frequency\") +\n   xlab(expression(\"Fisher's transformation of (\" * italic(r) * \") (\" * italic(Z) * \")\")) +\n  theme_minimal_hgrid()\n\nZ_sev_yld\n\n\n(r_sev_yld | Z_sev_yld)\n\n```\n\n## Random effects models\n\n```{r}\n# individual regressions\nfit_all <- lsd_combined%>%\n  group_by(LOCAL_YEAR) |> \n  do(broom::tidy(lm(.$yld ~ .$sev), conf.int=TRUE))\nsummary(fit_all)\n```\n\n\n```{r}\n# data preparation\nIntercepts <- fit_all |> \n  filter(term == \"(Intercept)\")\nSlopes <-  fit_all |> \n  filter(term == \".$sev\")\n```\n\n```{r}\n# Model for the intercepts\ndfc1 <- rma(yi = estimate, sei = std.error, data = Intercepts)\nsummary(dfc1)\n\nmetafor::predict.rma(dfc1)\n```\n\n```{r}\n# Model for the slopes\ndfc2 <- rma(yi = estimate, sei = std.error, data = Slopes)\nsummary(dfc2)\nmetafor::predict.rma(dfc2)\n```\n\n```{r}\nb1 <- fit_all |> \n  filter(term == \"(Intercept)\") |> \n  ggplot(aes(x = estimate))+\n  geom_histogram(bins = 15, color = \"black\", fill = \"white\", alpha = 0.5, size = 1)+\n  theme_minimal_hgrid()+\n  labs(x = \"Intercept\", y = \"Frequency\") +\n  theme(\n    axis.title.x = element_text(size = 20),\n    axis.title.y = element_text(size = 20),\n    axis.text.x = element_text(size = 18),   \n    axis.text.y = element_text(size = 18))\n\nb2 <- fit_all |> \n  filter(term == \".$sev\") |> \n  ggplot(aes(x = estimate))+\n  geom_histogram(bins = 15, color = \"black\", fill = \"white\", alpha = 0.5, size = 1)+\n  theme_minimal_hgrid()+\n  labs(x = \"Slope\", y = \"Frequency\")+\n   theme(\n    axis.title.x = element_text(size = 20), \n    axis.title.y = element_text(size = 20), \n    axis.text.x = element_text(size = 16),   \n    axis.text.y = element_text(size = 16))\n\n(b1 + b2)\n```\n\nLet's make a forest plot that shows the distribution of the ꞵ1:\n\n```{r}\nSlopes2 <- Slopes \nSlopes2$ENUM_LOCAL_YEAR <- as.integer(factor(Slopes2$LOCAL_YEAR, levels = unique(Slopes2$LOCAL_YEAR)))\n\nSlopes2 |> \n  ggplot(aes(reorder(ENUM_LOCAL_YEAR, +estimate), estimate)) +\n  geom_point(size = 3) +\n  geom_errorbar(aes(ymin = conf.low,\n                    ymax = conf.high),\n                width = 0.5,\n                linetype = \"solid\") +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"black\") +\n  labs(x = \"Study\", y = \"Slope\")+\n   theme_half_open()+\n  coord_flip()+\n  theme(text = element_text(size = 20),\n        axis.text.x = element_text(size = 18),   \n        axis.text.y = element_text(size = 13))\n```\n\n\n## Moderator variables\n\nDisease pressure (low severity = ≤35% and high severity = \\>35%), yield class (low = ≤3,745 kg/ha and high = \\>3,745 kg/ha), region (trials conducted below 20°S were classified as south, and others as north), altitude (\\<635 m or ≥635 m above sea level), and year were included as categorical moderators that could explain at least part of the observed heterogeneity and expanded the model from a random to a mixed effects model.\n\n```{r}\nmoderators <- read_csv(\"moderators.csv\")\nclass_df <- moderators[, c(\"LOCAL_YEAR\", \"yield_class\", \"sev_class\", \"region_class\", \"altitude_class\", \"YEAR\")]\n\n\n#preparing data: INTERCEPTS\nint_class <- left_join(Intercepts, class_df, by = \"LOCAL_YEAR\")\n\nint_class <- int_class |> \n  group_by(LOCAL_YEAR) |> \n  mutate(mean_estimate = mean(estimate)) |> \n  distinct(LOCAL_YEAR, .keep_all = TRUE)\n\n\n#preparing data: SLOPES\nslope_class <- left_join(Slopes, class_df, by = \"LOCAL_YEAR\")\n\nslope_class <- slope_class |> \n  group_by(LOCAL_YEAR) |> \n  mutate(mean_estimate = mean(estimate)) |> \n  distinct(LOCAL_YEAR, .keep_all = TRUE)\n\n```\n\n## Yield Class\n\n```{r}\n# Intercept\n\nlsd1 <- rma(yi = estimate ~ factor(yield_class), sei = std.error, data = int_class)\nsummary(lsd1)\n\n# Slope\n\nlsd2 <- rma(yi = estimate ~ factor(yield_class), sei = std.error, data = slope_class)\nsummary(lsd2)\n\n```\n\n## Sev Class\n\n\n```{r}\n# Intercept\n\nlsd3 <- rma(yi = estimate ~ factor(sev_class), sei = std.error, data = int_class)\nsummary(lsd3)\n\n# Slope\n\nlsd4 <- rma(yi = estimate ~ factor(sev_class), sei = std.error, data = slope_class)\nsummary(lsd4)\n```\n\n\n## Region Class\n\n```{r}\n# Intercept\n\nlsd5 <- rma(yi = estimate ~ factor(region_class), sei = std.error, data = int_class)\nsummary(lsd5)\n\n# Slope\n\nlsd6 <- rma(yi = estimate ~ factor(region_class), sei = std.error, data = slope_class)\nsummary(lsd6)\n```\n\n## Altitude Class\n\n\n```{r}\n# Intercept\n\nlsd7 <- rma(yi = estimate ~ factor(altitude_class), sei = std.error, data = int_class)\nsummary(lsd7)\n\n# Slope\n\nlsd8 <- rma(yi = estimate ~ factor(altitude_class), sei = std.error, data = slope_class)\nsummary(lsd8)\n```\n\n## Year\n\n```{r}\n# Intercept\n\nlsd9 <- rma(yi = estimate ~ factor(YEAR), sei = std.error, data = int_class)\nsummary(lsd9)\n\n# Slope\n\nlsd10 <- rma(yi = estimate ~ factor(YEAR), sei = std.error, data = slope_class)\nsummary(lsd10)\n```\n\n# Relative damage loss\n\nBased on the overall mean of the intercept (β0 = 4,589.06 kg/ha) and the slope (β1 = -22.58 kg/ha) estimated by the random-effects model, the overall relative damage coefficient was estimated at -0.49%.As a example, let's suppose that to achieve a relative yield of 80%, corresponding to a 20% reduction in yield (yield loss), the severity of LSD would need to reach approximately 40.6%. \n\n```{r}\ndf <- data.frame(sev = (seq(0, 100, by = 5)))\ndf$yield <- 4589.0620 - 22.5833 * df$sev\ndf$relative <- df$yield *100 / 4589.06\n\ndf |> \n ggplot(aes(sev, relative)) +\n  geom_smooth(method = (lm), se = FALSE, color = \"black\", fullrange = TRUE)+\n  scale_y_continuous(breaks = c(20, 40, 60, 80, 100), \n                     limits = c(20, 100),\n                     expand = c(0, 0))+\n  scale_x_continuous(breaks = c(0, 25, 50, 75, 100),\n                     limits = c(0, 100),\n                     expand = c(0, 0))+\n  labs(x = \"LSD Severity (%)\", y = \"Relative yield (%) \")+\n  geom_hline(yintercept = 80,\n             linetype = 2)+\n  geom_vline(xintercept = c(40.647032772), linetype = 2)+\n  theme_classic()+\n  theme(text = element_text(size = 20),\n        axis.text.x = element_text(size = 18),   \n        axis.text.y = element_text(size = 18))\n```\n\n\n\n# Economic damage threshold\n\n```{r}\n# Function to Simulate EDC\n\nsimula_LDE <- function(n, media_rp, sd_rp, eficacia, cd_base, custo_range, preco_range) {\n  simulacoes <- tibble(\n    rendimento_potencial = rnorm(n, media_rp, sd_rp),\n    custo_controle = runif(n, custo_range[1], custo_range[2]),\n    preco_produto = runif(n, preco_range[1], preco_range[2]),\n    eficacia = eficacia\n  ) %>% \n    mutate(\n      coeficiente_dano = cd_base * rendimento_potencial,\n      LDE = (custo_controle / (preco_produto * coeficiente_dano)) * eficacia\n    )\n  return(simulacoes)\n}\n\n\nn = 5000 # number of simulations\nmedia_rp = 4.6 # in ton/ha\nsd_rp = 0.79  # SD of attainable yield\neficacia = rnorm(5000, 0.54, 0.1) #  in proportion\ncd_base = 0.0049 # 0.49  / 100 -> %/ton\ncusto_range = c(25, 25) # cust of control (US$)\npreco_range = c(393.22, 393.22) # soybean price (US$)\n\n# run the simulation\nsimula <- simula_LDE(n, media_rp, sd_rp, eficacia, cd_base, custo_range, preco_range)\n```\n\n\n```{r}\n# Make the plots:\n\nsimula$median_LDE <- median(simula$LDE)\nsimula$mean_LDE <- mean(simula$LDE)\n\n# Calculate the 95% confidence interval of EDT\nsimula$ci_lower <- quantile(simula$LDE, probs = 0.025)\nsimula$ci_upper <- quantile(simula$LDE, probs = 0.975)\n\n# Plot:\n\nggplot(simula, aes(x = LDE)) +\n  stat_halfeye(fill = \"darkorange\", alpha = 0.7) +\n  geom_vline(aes(xintercept = median_LDE), color = \"red\", linetype = \"dashed\", size = 1) +\n    labs(title = paste(\"Median EDT:\", round(simula$median_LDE, 2), \"\\n95% CI: [\", round(simula$ci_lower, 2), \", \", round(simula$ci_upper, 2), \"]\"),\n       x = \"Economic Damage Threshold (EDT)\",\n       y = \"Density\") +\n    theme_classic(base_size = 16)\n\ni1 <- ggplot(simula, aes(x = LDE)) +\n  stat_halfeye(fill = \"darkorange\", alpha = 0.7) +\n  geom_vline(aes(xintercept = median(LDE)), color = \"red\", linetype = \"dashed\", size = 1) +\n  annotate(\"text\", x = 3.2, y = 0.90, label = \"Median = 1.54%\", color = \"black\", size = 4.5) +\n  annotate(\"text\", x = 3.2, y = 0.85, label = \"95% CI = 0.89%, 2.53%\", color = \"black\", size = 4.5) +\n  labs(\n    x = \"Economic Damage Threshold (EDT)\",\n    y = \"Density\"\n  ) +\n  theme_classic(base_size = 16)\n\n\ni2 <-simula |> \n  ggplot(aes(rendimento_potencial, eficacia, color = LDE ))+\n  geom_point()+\n  scale_color_viridis_c(labels = scales::number_format(accuracy = 0.1))+\n   labs(color = \"EDT\",\n     x = \"Attainable yield (ton/ha)\",\n       y = \"Fungicide efficacy (%)\") +\n    theme_classic(base_size = 16)\n\ni1+i2+\n  plot_annotation(tag_levels = \"A\")\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"about.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.555","editor":"visual","theme":"Minimalist","title":"","message":false},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}