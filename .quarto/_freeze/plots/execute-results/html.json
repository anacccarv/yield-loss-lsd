{
  "hash": "941d3f8c65c234f31594165d299b17f7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Figures\"\nmessage: false\nwarning: false\n---\n\n\n# Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(bulkreadr)\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(metafor)\nlibrary(psych)\nlibrary(cowplot)\nlibrary(patchwork)\nlibrary(r4pde)\nlibrary(broom)\nlibrary(metafor)\nlibrary(lme4)\nlibrary(writexl)\nlibrary(gsheet)\nlibrary(readxl)\n```\n:::\n\n# Importation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlsd_2021 <- read_csv(\"lsd2021.csv\")\nlsd_2022 <- read_csv(\"lsd2022.csv\")\nlsd_2023 <- read_csv(\"lsd2023.csv\")\nlsd_2024 <- read_csv(\"lsd2024.csv\")\n\nlsd_combined <- rbind(lsd_2021, lsd_2022, lsd_2023, lsd_2024)\n\nlsd_combined <- lsd_combined |>\n  separate(LOCAL_YEAR, into = c(\"local\", \"year\"), sep = \"_\", remove = FALSE)\n\nlsd_combined$trial <- as.integer(factor(lsd_combined$LOCAL_YEAR, levels = unique(lsd_combined$LOCAL_YEAR)))\n\nlsd_combined <- lsd_combined |> \n  select(LOCAL_YEAR, trial, year, local, trat, sev, yld)\n\nlsd_combined_mean <- lsd_combined |> \n  group_by(trat, trial, year, local) |> \n  summarise(mean_sev = mean(sev),\n            mean_yld = mean(yld))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nr_regression = lsd_combined %>%\n  filter(sev != \"NA\") %>%\n  filter(!yld == \"NA\") %>%\n # group_by(year) %>%\n  dplyr::select( sev, yld, LOCAL_YEAR) %>%\n  #group_by(study) %>%\n  do({\n    model <- lm(.$yld ~ .$sev + factor(.$LOCAL_YEAR))\n    tidy_model <- tidy(model)\n    confint_model <- confint(model)  # Calcula os intervalos de confiança\n    bind_cols(tidy_model, confint_model)\n  })\n\n\nr_regression\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 40 × 7\n   term                   estimate std.error statistic  p.value `2.5 %` `97.5 %`\n   <chr>                     <dbl>     <dbl>     <dbl>    <dbl>   <dbl>    <dbl>\n 1 (Intercept)             4754.      53.5     88.9    0         4649.    4859. \n 2 .$sev                    -15.8      0.825  -19.1    4.29e-74   -17.4    -14.2\n 3 factor(.$LOCAL_YEAR)1…   682.      75.6      9.02   4.77e-19   534.     830. \n 4 factor(.$LOCAL_YEAR)1…   977.      68.8     14.2    2.17e-43   842.    1112. \n 5 factor(.$LOCAL_YEAR)1…  -342.      74.0     -4.63   3.98e- 6  -487.    -197. \n 6 factor(.$LOCAL_YEAR)1…  -478.      68.8     -6.94   5.42e-12  -613.    -343. \n 7 factor(.$LOCAL_YEAR)1…   392.      73.8      5.30   1.28e- 7   247.     536. \n 8 factor(.$LOCAL_YEAR)1…     1.80    75.9      0.0237 9.81e- 1  -147.     151. \n 9 factor(.$LOCAL_YEAR)1…  -941.      66.8    -14.1    1.17e-42 -1072.    -810. \n10 factor(.$LOCAL_YEAR)1…  -501.      73.5     -6.82   1.25e-11  -645.    -357. \n# ℹ 30 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nr_regression <- r_regression |> \nfilter(term %in% c(\"(Intercept)\",\".$sev\"))\n \nr_regression[r_regression$term== \"(Intercept)\",c(\"parameters\")] <- \"Intercept\"\nr_regression[r_regression$term== \".$sev\",c(\"parameters\")] <- \"Slope\"\n\ni <- 1\n while (i <= nrow(r_regression)) {\n  if (r_regression$parameters[i] == \"Slope\" && r_regression$estimate[i] > 0) {\n    # Remove a linha do Slope e a linha do Intercept correspondente\n    r_regression <- r_regression[-c(i, i - 1), ]\n    # Atualiza o índice, pois duas linhas foram removidas\n    i <- i - 2\n  }\n  i <- i + 1\n  }\nr_regression\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 8\n  term        estimate std.error statistic  p.value `2.5 %` `97.5 %` parameters\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>   <dbl>    <dbl> <chr>     \n1 (Intercept)   4754.     53.5        88.9 0         4649.    4859.  Intercept \n2 .$sev          -15.8     0.825     -19.1 4.29e-74   -17.4    -14.2 Slope     \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nr_regression = r_regression |> \nfilter(term %in% c(\"(Intercept)\",\".$sev\"))\n \nr_regression[r_regression$term== \"(Intercept)\",c(\"parameters\")] <- \"Intercept\"\nr_regression[r_regression$term== \".$sev\",c(\"parameters\")] <- \"Slope\"\n\ni <- 1\n while (i <= nrow(r_regression)) {\n  if (r_regression$parameters[i] == \"Slope\" && r_regression$estimate[i] > 0) {\n    # Remove a linha do Slope e a linha do Intercept correspondente\n    r_regression <- r_regression[-c(i, i - 1), ]\n    # Atualiza o índice, pois duas linhas foram removidas\n    i <- i - 2\n  }\n  i <- i + 1\n  }\nr_regression\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 8\n  term        estimate std.error statistic  p.value `2.5 %` `97.5 %` parameters\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>   <dbl>    <dbl> <chr>     \n1 (Intercept)   4754.     53.5        88.9 0         4649.    4859.  Intercept \n2 .$sev          -15.8     0.825     -19.1 4.29e-74   -17.4    -14.2 Slope     \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(r_regression) = c(\"term\", \"estimate\", \"std.error\", \"statistic\", \"p.value\", \"low\", \"high\", \"parameters\")\n\nr_regression = r_regression |> \nfilter(term %in% c(\"(Intercept)\",\".$sev\"))\nr_regression$pil <- c(3074.0281, -43.8480)\nr_regression$piu <- c(6104.0960, -1.3186)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlsd_combined |> \n ggplot(aes(sev, yld)) +\n  geom_point(color = \"NA\")+\n  scale_y_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000), \n                     limits = c(2000, 7000))+\n  scale_x_continuous(breaks = c(0, 25, 50, 75, 100),\n                     limits = c(0, 100))+\n  geom_abline(data =r_regression, aes(slope = estimate[2], intercept = estimate[1]), size = 1.5, color = \"black\")+\n  geom_abline(data = r_regression, aes(intercept = high[1], slope = high[2]), size = .51, linetype = 2)+ #upper ci\n  geom_abline(data = r_regression, aes(intercept = low[1], slope = low[2]), size = .51, linetype = 2)+ #low ci\n  geom_abline(data = r_regression, aes(intercept = piu[1], slope = piu[2]), size = 2, linetype = 2, color = \"darkgray\")+ #upper pi\n  geom_abline(data = r_regression, aes(intercept = pil[1], slope = pil[2]), size = 2, linetype = 2, color = \"darkgray\")+ #low pi\n  labs(x = \"LSD Severity (%)\", y = \"Yield (kg/ha) \")+\n  theme_classic()+\n  theme(text = element_text(size = 20),\n        axis.text.x = element_text(size = 18),   \n        axis.text.y = element_text(size = 18))\n```\n\n::: {.cell-output-display}\n![](plots_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nr_regression2 = lsd_combined |>\n  filter(sev != \"NA\") |>\n  filter(!yld == \"NA\")  |>\n  dplyr::select(sev, yld, trial) |>\n  group_by(trial) |>\n  do({\n    model <- lm(.$yld ~ .$sev)\n    tidy_model <- tidy(model)\n    confint_model <- confint(model)  \n    bind_cols(tidy_model, confint_model)\n  })\n\nr_regression2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 78 × 8\n# Groups:   trial [39]\n   trial term        estimate std.error statistic  p.value `2.5 %` `97.5 %`\n   <int> <chr>          <dbl>     <dbl>     <dbl>    <dbl>   <dbl>    <dbl>\n 1     1 (Intercept)  4386.       68.8      63.8  1.96e-43  4247.   4525.  \n 2     1 .$sev          -5.95      5.54     -1.07 2.89e- 1   -17.1     5.22\n 3     2 (Intercept)  4348.       39.7     110.   3.05e-53  4268.   4428.  \n 4     2 .$sev         -81.6      23.7      -3.44 1.32e- 3  -129.    -33.7 \n 5     3 (Intercept)  4347.      118.       36.8  1.33e-33  4109.   4585.  \n 6     3 .$sev         -13.3       3.88     -3.44 1.34e- 3   -21.2    -5.50\n 7     4 (Intercept)  4741.      245.       19.3  1.55e-22  4247.   5236.  \n 8     4 .$sev         -29.8       8.98     -3.33 1.84e- 3   -48.0   -11.7 \n 9     5 (Intercept)  4567.      203.       22.5  4.46e-25  4158.   4976.  \n10     5 .$sev         -28.7       7.46     -3.85 3.97e- 4   -43.8   -13.7 \n# ℹ 68 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nr_regression2 = r_regression2 |> \nfilter(term %in% c(\"(Intercept)\",\".$sev\"))\n \nr_regression2[r_regression2$term== \"(Intercept)\",c(\"parameters\")] <- \"Intercept\"\nr_regression2[r_regression2$term== \".$sev\",c(\"parameters\")] <- \"Slope\"\n\ni <- 1\n while (i <= nrow(r_regression2)) {\n  if (r_regression2$parameters[i] == \"Slope\" && r_regression2$estimate[i] > 0) {\n    r_regression2 <- r_regression2[-c(i, i - 1), ]\n    i <- i - 2\n  }\n  i <- i + 1\n  }\nr_regression2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 76 × 9\n# Groups:   trial [38]\n   trial term  estimate std.error statistic  p.value `2.5 %` `97.5 %` parameters\n   <int> <chr>    <dbl>     <dbl>     <dbl>    <dbl>   <dbl>    <dbl> <chr>     \n 1     1 (Int…  4386.       68.8      63.8  1.96e-43  4247.   4525.   Intercept \n 2     1 .$sev    -5.95      5.54     -1.07 2.89e- 1   -17.1     5.22 Slope     \n 3     2 (Int…  4348.       39.7     110.   3.05e-53  4268.   4428.   Intercept \n 4     2 .$sev   -81.6      23.7      -3.44 1.32e- 3  -129.    -33.7  Slope     \n 5     3 (Int…  4347.      118.       36.8  1.33e-33  4109.   4585.   Intercept \n 6     3 .$sev   -13.3       3.88     -3.44 1.34e- 3   -21.2    -5.50 Slope     \n 7     4 (Int…  4741.      245.       19.3  1.55e-22  4247.   5236.   Intercept \n 8     4 .$sev   -29.8       8.98     -3.33 1.84e- 3   -48.0   -11.7  Slope     \n 9     5 (Int…  4567.      203.       22.5  4.46e-25  4158.   4976.   Intercept \n10     5 .$sev   -28.7       7.46     -3.85 3.97e- 4   -43.8   -13.7  Slope     \n# ℹ 66 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nslope_coefficient = r_regression2 |> \n  filter(parameters == \"Slope\") |> \n  group_by(trial) |> \n  summarise(\n    Slope = estimate\n  )\n\nslope_coefficient[,1] = NULL\n\nslope_coefficient |> \n  filter(!Slope == \"NA\") |> \n  summarise(\nmean = mean(Slope))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n   mean\n  <dbl>\n1 -24.7\n```\n\n\n:::\n\n```{.r .cell-code}\nintercept_coefficient = r_regression2 |> \n  filter(parameters == \"Intercept\") |>\n  group_by(trial) |> \n  summarise(\n    Intercept = estimate\n  )\nintercept_coefficient[,1] = NULL\n\nmean(intercept_coefficient$Intercept)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4608.184\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(intercept_coefficient$Intercept)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 793.1929\n```\n\n\n:::\n\n```{.r .cell-code}\nregression = cbind(slope_coefficient,intercept_coefficient)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_point(aes(x = 0:100, y = seq(0,7000,by = 70)), color = NA)+\n   scale_y_continuous(breaks = c(0, 1000,2000,3000, 4000,5000,6000,7000), \n                     limits = c(0, 7000))+\n  geom_abline(data =regression, aes(slope = Slope, intercept = Intercept), size = 1,\n              alpha = 0.5, color = \"gray\")+\n  geom_abline(intercept = 4754.14525\t,slope = -15.78117\t, size = 1.2)+\n  geom_abline(intercept = 4859.08129,slope = -14.16354 , size = .51, linetype = 2)+\n  geom_abline(intercept = 4649.2092\t,slope = -17.3988, size = .51, linetype = 2)+\n  labs(x = \"LSD Severity (%)\", y = \"Yield (kg/ha) \")+\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](plots_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot() +\n  geom_point(aes(x = 0:100, y = seq(0,7000,by = 70)), color = NA)+\n   scale_y_continuous(breaks = c(0, 1000,2000,3000, 4000,5000,6000,7000), \n                     limits = c(0, 7000))+\n  geom_abline(data =regression, aes(slope = Slope, intercept = Intercept), size = 1, alpha = 0.5, color = \"gray\")+\n  labs(x = \"LSD Severity (%)\", y = \"Yield (kg/ha) \")+\n  theme_classic()+\n  theme(text = element_text(size = 20),\n        axis.text.x = element_text(size = 18),   \n        axis.text.y = element_text(size = 18))\n```\n\n::: {.cell-output-display}\n![](plots_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlsd_combined_mean |> \n  ggplot(aes(mean_sev, mean_yld)) +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\", fullrange = TRUE) +\n  geom_point(color = \"black\", shape = 1) +\n  facet_wrap(~trial,\n             ncol = 5) +\n  scale_y_continuous(limits = c(0, 6000)) +\n  scale_x_continuous(limits = c(0, 100)) +\n  theme_cowplot() +\n  labs(y = \"Yield (kg/ha)\", x = \"Severity (%)\")\n```\n\n::: {.cell-output-display}\n![](plots_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "plots_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}