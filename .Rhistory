confint_model <- confint(model)
bind_cols(tidy_model, confint_model)
})
r_regression = r_regression |>
filter(term %in% c("(Intercept)",".$sev"))
r_regression2[r_regression2$term== "(Intercept)",c("parameters")] <- "Intercept"
r_regression2[r_regression2$term== ".$sev",c("parameters")] <- "Slope"
i <- 1
while (i <= nrow(r_regression2)) {
if (r_regression2$parameters[i] == "Slope" && r_regression2$estimate[i] > 0) {
# Remove a linha do Slope e a linha do Intercept correspondente
r_regression2 <- r_regression2[-c(i, i - 1), ]
# Atualiza o índice, pois duas linhas foram removidas
i <- i - 2
}
i <- i + 1
}
r_regression = lsd_combined %>%
filter(sev != "NA") %>%
filter(!yld == "NA") %>%
dplyr::select(sev, yld, LOCAL_YEAR) %>%
group_by(LOCAL_YEAR) %>%
do({
model <- lm(.$yld ~ .$sev)
tidy_model <- tidy(model)
confint_model <- confint(model)
bind_cols(tidy_model, confint_model)
})
r_regression = r_regression |>
filter(term %in% c("(Intercept)",".$sev"))
r_regression2[r_regression2$term== "(Intercept)",c("parameters")] <- "Intercept"
r_regression2[r_regression2$term== ".$sev",c("parameters")] <- "Slope"
i <- 1
while (i <= nrow(r_regression2)) {
if (r_regression2$parameters[i] == "Slope" && r_regression2$estimate[i] > 0) {
# Remove a linha do Slope e a linha do Intercept correspondente
r_regression2 <- r_regression2[-c(i, i - 1), ]
# Atualiza o índice, pois duas linhas foram removidas
i <- i - 2
}
i <- i + 1
}
slope_coefficient = r_regression2 |>
filter(parameters == "Slope") |>
group_by(LOCAL_YEAR) |>
summarise(
Slope = estimate
)
r_regression = lsd_combined %>%
filter(sev != "NA") %>%
filter(!yld == "NA") %>%
dplyr::select(sev, yld, LOCAL_YEAR) %>%
group_by(LOCAL_YEAR) %>%
do({
model <- lm(.$yld ~ .$sev)
tidy_model <- tidy(model)
confint_model <- confint(model)
bind_cols(tidy_model, confint_model)
})
r_regression = r_regression |>
filter(term %in% c("(Intercept)",".$sev"))
r_regression2[r_regression2$term== "(Intercept)",c("parameters")] <- "Intercept"
r_regression2[r_regression2$term== ".$sev",c("parameters")] <- "Slope"
i <- 1
while (i <= nrow(r_regression2)) {
if (r_regression2$parameters[i] == "Slope" && r_regression2$estimate[i] > 0) {
# Remove a linha do Slope e a linha do Intercept correspondente
r_regression2 <- r_regression2[-c(i, i - 1), ]
# Atualiza o índice, pois duas linhas foram removidas
i <- i - 2
}
i <- i + 1
}
slope_coefficient = r_regression |>
filter(parameters == "Slope") |>
group_by(LOCAL_YEAR) |>
summarise(
Slope = estimate
)
r_regression = lsd_combined %>%
filter(sev != "NA") %>%
filter(!yld == "NA") %>%
dplyr::select(sev, yld, LOCAL_YEAR) %>%
group_by(LOCAL_YEAR) %>%
do({
model <- lm(.$yld ~ .$sev)
tidy_model <- tidy(model)
confint_model <- confint(model)
bind_cols(tidy_model, confint_model)
})
r_regression = r_regression |>
filter(term %in% c("(Intercept)",".$sev"))
r_regression[r_regression$term== "(Intercept)",c("parameters")] <- "Intercept"
r_regression[r_regression$term== ".$sev",c("parameters")] <- "Slope"
i <- 1
while (i <= nrow(r_regression2)) {
if (r_regression2$parameters[i] == "Slope" && r_regression2$estimate[i] > 0) {
# Remove a linha do Slope e a linha do Intercept correspondente
r_regression2 <- r_regression2[-c(i, i - 1), ]
# Atualiza o índice, pois duas linhas foram removidas
i <- i - 2
}
i <- i + 1
}
slope_coefficient = r_regression |>
filter(parameters == "Slope") |>
group_by(LOCAL_YEAR) |>
summarise(
Slope = estimate
)
slope_coefficient[,1] = NULL
slope_coefficient |>
filter(!Slope == "NA") |>
summarise(
mean = mean(Slope))
intercept_coefficient = r_regression |>
filter(parameters == "Intercept") |>
group_by(LOCAL_YEAR) |>
summarise(
Intercept = estimate
)
intercept_coefficient[,1] = NULL
mean(intercept_coefficient$Intercept)
sd(intercept_coefficient$Intercept)
regression = cbind(slope_coefficient,intercept_coefficient)
ggplot() +
geom_point(aes(x = 0:100, y = seq(0,7000,by = 70)), color = NA)+
scale_y_continuous(breaks = c(0, 1000,2000,3000, 4000,5000,6000,7000),
limits = c(0, 7000))+
geom_abline(data = regression, aes(slope = Slope, intercept = Intercept), size = 1, alpha = 0.5, color = "gray")+
labs(x = "LSD Severity (%)", y = "Yield (kg/ha) ")+
theme_classic()+
theme(text = element_text(size = 20),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18))
r_regression2 = lsd_combined %>%
filter(sev != "NA") %>%
filter(!yld == "NA") %>%
dplyr::select(sev, yld, LOCAL_YEAR) %>%
group_by(LOCAL_YEAR) %>%
do({
model <- lm(.$yld ~ .$sev)
tidy_model <- tidy(model)
confint_model <- confint(model)
bind_cols(tidy_model, confint_model)
})
r_regression2 = lsd_combined %>%
filter(sev != "NA") %>%
filter(!yld == "NA") %>%
dplyr::select(sev, yld, LOCAL_YEAR) %>%
group_by(LOCAL_YEAR) %>%
do({
model <- lm(.$yld ~ .$sev)
tidy_model <- tidy(model)
confint_model <- confint(model)
bind_cols(tidy_model, confint_model)
})
r_regression2 = r_regression2 |>
filter(term %in% c("(Intercept)",".$sev"))
r_regression[r_regression$term== "(Intercept)",c("parameters")] <- "Intercept"
r_regression[r_regression$term== ".$sev",c("parameters")] <- "Slope"
i <- 1
while (i <= nrow(r_regression)) {
if (r_regression$parameters[i] == "Slope" && r_regression$estimate[i] > 0) {
r_regression <- r_regression[-c(i, i - 1), ]
i <- i - 2
}
i <- i + 1
}
colnames(r_regression) = c("term", "estimate", "std.error", "statistic", "p.value", "low", "high", "parameters")
r_regression = r_regression |>
filter(term %in% c("(Intercept)",".$sev"))
r_regression2 = lsd_combined %>%
filter(sev != "NA") %>%
filter(!yld == "NA") %>%
dplyr::select(sev, yld, LOCAL_YEAR) %>%
group_by(LOCAL_YEAR) %>%
do({
model <- lm(.$yld ~ .$sev)
tidy_model <- tidy(model)
confint_model <- confint(model)
bind_cols(tidy_model, confint_model)
})
r_regression2 = r_regression2 |>
filter(term %in% c("(Intercept)",".$sev"))
r_regression2[r_regression2$term== "(Intercept)",c("parameters")] <- "Intercept"
r_regression2[r_regression2$term== ".$sev",c("parameters")] <- "Slope"
i <- 1
while (i <= nrow(r_regression2)) {
if (r_regression$parameters[i] == "Slope" && r_regression2$estimate[i] > 0) {
r_regression <- r_regression[-c(i, i - 1), ]
i <- i - 2
}
i <- i + 1
}
r_regression2 = lsd_combined %>%
filter(sev != "NA") %>%
filter(!yld == "NA") %>%
dplyr::select(sev, yld, LOCAL_YEAR) %>%
group_by(LOCAL_YEAR) %>%
do({
model <- lm(.$yld ~ .$sev)
tidy_model <- tidy(model)
confint_model <- confint(model)
bind_cols(tidy_model, confint_model)
})
r_regression2 = r_regression2 |>
filter(term %in% c("(Intercept)",".$sev"))
r_regression2[r_regression2$term== "(Intercept)",c("parameters")] <- "Intercept"
r_regression2[r_regression2$term== ".$sev",c("parameters")] <- "Slope"
i <- 1
while (i <= nrow(r_regression2)) {
if (r_regression2$parameters[i] == "Slope" && r_regression2$estimate[i] > 0) {
r_regression2 <- r_regression2[-c(i, i - 1), ]
i <- i - 2
}
i <- i + 1
}
colnames(r_regression) = c("term", "estimate", "std.error", "statistic", "p.value", "low", "high", "parameters")
r_regression2 = r_regression2 |>
filter(term %in% c("(Intercept)",".$sev"))
r_regression2$pil <- c(3074.0281, -43.8480)
r_regression2 = lsd_combined %>%
filter(sev != "NA") %>%
filter(!yld == "NA") %>%
dplyr::select(sev, yld, LOCAL_YEAR) %>%
group_by(LOCAL_YEAR) %>%
do({
model <- lm(.$yld ~ .$sev)
tidy_model <- tidy(model)
confint_model <- confint(model)
bind_cols(tidy_model, confint_model)
})
r_regression2 = r_regression2 |>
filter(term %in% c("(Intercept)",".$sev"))
r_regression2[r_regression2$term== "(Intercept)",c("parameters")] <- "Intercept"
r_regression2[r_regression2$term== ".$sev",c("parameters")] <- "Slope"
i <- 1
while (i <= nrow(r_regression2)) {
if (r_regression2$parameters[i] == "Slope" && r_regression2$estimate[i] > 0) {
r_regression2 <- r_regression2[-c(i, i - 1), ]
i <- i - 2
}
i <- i + 1
}
colnames(r_regression) = c("term", "estimate", "std.error", "statistic", "p.value", "low", "high", "parameters")
r_regression2 = r_regression2 |>
filter(term %in% c("(Intercept)",".$sev"))
r_regression2$pil <- c(3074.0281, -43.8480)
View(r_regression2)
View(r_regression)
ggplot() +
geom_point(aes(x = 0:100, y = seq(0,7000,by = 70)), color = NA)+
scale_y_continuous(breaks = c(0, 1000,2000,3000, 4000,5000,6000,7000),
limits = c(0, 7000))+
geom_abline(data = regression, aes(slope = Slope, intercept = Intercept), size = 1, alpha = 0.5, color = "gray")+
labs(x = "LSD Severity (%)", y = "Yield (kg/ha) ")+
theme_classic()+
theme(text = element_text(size = 20),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18))
View(r_regression2)
r_regression2 = lsd_combined %>%
filter(sev != "NA") %>%
filter(!yld == "NA") %>%
dplyr::select(sev, yld, LOCAL_YEAR) %>%
group_by(LOCAL_YEAR) %>%
do({
model <- lm(.$yld ~ .$sev)
tidy_model <- tidy(model)
confint_model <- confint(model)
bind_cols(tidy_model, confint_model)
})
confint_model <- confint(model)
r_regression2 = lsd_combined %>%
filter(sev != "NA") %>%
filter(!yld == "NA") %>%
dplyr::select(sev, yld, LOCAL_YEAR) %>%
group_by(LOCAL_YEAR) %>%
do({
model <- lm(.$yld ~ .$sev + factor(.$LOCAL_YEAR))
tidy_model <- tidy(model)
confint_model <- confint(model)
bind_cols(tidy_model, confint_model)
})
model <- lm(.$yld ~ .$sev + factor(.$LOCAL_YEAR))
r_regression = lsd_combined %>%
filter(sev != "NA") %>%
filter(!yld == "NA") %>%
dplyr::select( sev, yld, LOCAL_YEAR) %>%
do({
model <- lm(.$yld ~ .$sev + factor(.$LOCAL_YEAR))
tidy_model <- tidy(model)
confint_model <- confint(model)  # Calcula os intervalos de confiança
bind_cols(tidy_model, confint_model)
})
r_regression2 = lsd_combined %>%
filter(sev != "NA") %>%
filter(!yld == "NA") %>%
dplyr::select( sev, yld, LOCAL_YEAR) %>%
do({
model <- lm(.$yld ~ .$sev + factor(.$LOCAL_YEAR))
tidy_model <- tidy(model)
confint_model <- confint(model)  # Calcula os intervalos de confiança
bind_cols(tidy_model, confint_model)
})
r_regression2 = r_regression2 |>
filter(term %in% c("(Intercept)",".$sev"))
r_regression2[r_regression2$term== "(Intercept)",c("parameters")] <- "Intercept"
r_regression2[r_regression2$term== ".$sev",c("parameters")] <- "Slope"
i <- 1
while (i <= nrow(r_regression2)) {
if (r_regression2$parameters[i] == "Slope" && r_regression2$estimate[i] > 0) {
r_regression2 <- r_regression2[-c(i, i - 1), ]
i <- i - 2
}
i <- i + 1
}
colnames(r_regression) = c("term", "estimate", "std.error", "statistic", "p.value", "low", "high", "parameters")
r_regression2 = r_regression2 |>
filter(term %in% c("(Intercept)",".$sev"))
r_regression2$pil <- c(3074.0281, -43.8480)
lsd_combined |>
ggplot(aes(sev, yld)) +
geom_point(color = "NA")+
scale_y_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000),
limits = c(2000, 7000))+
scale_x_continuous(breaks = c(0, 25, 50, 75, 100),
limits = c(0, 100))+
geom_abline(data =r_regression, aes(slope = estimate[2], intercept = estimate[1]), size = 1.5, color = "black")+
geom_abline(data = r_regression, aes(intercept = high[1], slope = high[2]), size = .51, linetype = 2)+ #upper ci
geom_abline(data = r_regression, aes(intercept = low[1], slope = low[2]), size = .51, linetype = 2)+ #low ci
geom_abline(data = r_regression, aes(intercept = piu[1], slope = piu[2]), size = 2, linetype = 2, color = "darkgray")+ #upper pi
geom_abline(data = r_regression, aes(intercept = pil[1], slope = pil[2]), size = 2, linetype = 2, color = "darkgray")+ #low pi
labs(x = "LSD Severity (%)", y = "Yield (kg/ha) ")+
theme_classic()+
theme(text = element_text(size = 20),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18))
lsd_combined |>
ggplot(aes(sev, yld)) +
geom_point(color = "NA")+
scale_y_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000),
limits = c(2000, 7000))+
scale_x_continuous(breaks = c(0, 25, 50, 75, 100),
limits = c(0, 100))+
geom_abline(data =r_regression2, aes(slope = estimate[2], intercept = estimate[1]), size = 1.5, color = "black")+
geom_abline(data = r_regression2, aes(intercept = high[1], slope = high[2]), size = .51, linetype = 2)+ #upper ci
geom_abline(data = r_regression2, aes(intercept = low[1], slope = low[2]), size = .51, linetype = 2)+ #low ci
geom_abline(data = r_regression2, aes(intercept = piu[1], slope = piu[2]), size = 2, linetype = 2, color = "darkgray")+ #upper pi
geom_abline(data = r_regression2, aes(intercept = pil[1], slope = pil[2]), size = 2, linetype = 2, color = "darkgray")+ #low pi
labs(x = "LSD Severity (%)", y = "Yield (kg/ha) ")+
theme_classic()+
theme(text = element_text(size = 20),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18))
r_regression2
colnames(r_regression) = c("term", "estimate", "std.error", "statistic", "p.value", "low", "high", "parameters")
r_regression2 = r_regression2 |>
filter(term %in% c("(Intercept)",".$sev"))
r_regression2$pil <- c(3074.0281, -43.8480)
r_regression2$piu <- c(6104.0960, -1.3186)
r_regression2$pil <- c(3074.0281, -43.8480)
r_regression2$piu <- c(6104.0960, -1.3186)
```{r}
lsd_combined |>
ggplot(aes(sev, yld)) +
geom_point(color = "NA")+
scale_y_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000),
limits = c(2000, 7000))+
scale_x_continuous(breaks = c(0, 25, 50, 75, 100),
limits = c(0, 100))+
geom_abline(data =r_regression2, aes(slope = estimate[2], intercept = estimate[1]), size = 1.5, color = "black")+
geom_abline(data = r_regression2, aes(intercept = high[1], slope = high[2]), size = .51, linetype = 2)+ #upper ci
geom_abline(data = r_regression2, aes(intercept = low[1], slope = low[2]), size = .51, linetype = 2)+ #low ci
geom_abline(data = r_regression2, aes(intercept = piu[1], slope = piu[2]), size = 2, linetype = 2, color = "darkgray")+ #upper pi
geom_abline(data = r_regression2, aes(intercept = pil[1], slope = pil[2]), size = 2, linetype = 2, color = "darkgray")+ #low pi
labs(x = "LSD Severity (%)", y = "Yield (kg/ha) ")+
theme_classic()+
theme(text = element_text(size = 20),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18))
colnames(r_regression2) = c("term", "estimate", "std.error", "statistic", "p.value", "low", "high", "parameters")
r_regression2 = r_regression2 |>
filter(term %in% c("(Intercept)",".$sev"))
r_regression2$pil <- c(3074.0281, -43.8480)
r_regression2$piu <- c(6104.0960, -1.3186)
r_regression2$pil <- c(3074.0281, -43.8480)
r_regression2$piu <- c(6104.0960, -1.3186)
```{r}
lsd_combined |>
ggplot(aes(sev, yld)) +
geom_point(color = "NA")+
scale_y_continuous(breaks = c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000),
limits = c(2000, 7000))+
scale_x_continuous(breaks = c(0, 25, 50, 75, 100),
limits = c(0, 100))+
geom_abline(data =r_regression2, aes(slope = estimate[2], intercept = estimate[1]), size = 1.5, color = "black")+
geom_abline(data = r_regression2, aes(intercept = high[1], slope = high[2]), size = .51, linetype = 2)+ #upper ci
geom_abline(data = r_regression2, aes(intercept = low[1], slope = low[2]), size = .51, linetype = 2)+ #low ci
geom_abline(data = r_regression2, aes(intercept = piu[1], slope = piu[2]), size = 2, linetype = 2, color = "darkgray")+ #upper pi
geom_abline(data = r_regression2, aes(intercept = pil[1], slope = pil[2]), size = 2, linetype = 2, color = "darkgray")+ #low pi
labs(x = "LSD Severity (%)", y = "Yield (kg/ha) ")+
theme_classic()+
theme(text = element_text(size = 20),
axis.text.x = element_text(size = 18),
axis.text.y = element_text(size = 18))
r_regression = lsd_combined %>%
filter(sev != "NA") %>%
filter(!yld == "NA") %>%
dplyr::select(sev, yld, LOCAL_YEAR) %>%
group_by(LOCAL_YEAR) %>%
do({
model <- lm(.$yld ~ .$sev)
tidy_model <- tidy(model)
confint_model <- confint(model)
bind_cols(tidy_model, confint_model)
})
r_regression = r_regression |>
filter(term %in% c("(Intercept)",".$sev"))
r_regression[r_regression$term== "(Intercept)",c("parameters")] <- "Intercept"
r_regression[r_regression$term== ".$sev",c("parameters")] <- "Slope"
i <- 1
while (i <= nrow(r_regression)) {
if (r_regression$parameters[i] == "Slope" && r_regression$estimate[i] > 0) {
# Remove a linha do Slope e a linha do Intercept correspondente
r_regression2 <- r_regression2[-c(i, i - 1), ]
# Atualiza o índice, pois duas linhas foram removidas
i <- i - 2
}
i <- i + 1
}
r_regression = lsd_combined %>%
filter(sev != "NA") %>%
filter(!yld == "NA") %>%
dplyr::select(sev, yld, LOCAL_YEAR) %>%
group_by(LOCAL_YEAR) %>%
do({
model <- lm(.$yld ~ .$sev)
tidy_model <- tidy(model)
confint_model <- confint(model)
bind_cols(tidy_model, confint_model)
})
r_regression = r_regression |>
filter(term %in% c("(Intercept)",".$sev"))
r_regression[r_regression$term== "(Intercept)",c("parameters")] <- "Intercept"
r_regression[r_regression$term== ".$sev",c("parameters")] <- "Slope"
i <- 1
while (i <= nrow(r_regression)) {
if (r_regression$parameters[i] == "Slope" && r_regression$estimate[i] > 0) {
# Remove a linha do Slope e a linha do Intercept correspondente
r_regression2 <- r_regression2[-c(i, i - 1), ]
# Atualiza o índice, pois duas linhas foram removidas
i <- i - 2
}
i <- i + 1
}
slope_coefficient = r_regression |>
filter(parameters == "Slope") |>
group_by(LOCAL_YEAR) |>
summarise(
Slope = estimate
)
slope_coefficient[,1] = NULL
slope_coefficient |>
filter(!Slope == "NA") |>
summarise(
mean = mean(Slope))
intercept_coefficient = r_regression |>
filter(parameters == "Intercept") |>
group_by(LOCAL_YEAR) |>
summarise(
Intercept = estimate
)
intercept_coefficient[,1] = NULL
mean(intercept_coefficient$Intercept)
sd(intercept_coefficient$Intercept)
regression = cbind(slope_coefficient,intercept_coefficient)
r_regression = lsd_combined %>%
filter(sev != "NA") %>%
filter(!yld == "NA") %>%
dplyr::select(sev, yld, LOCAL_YEAR) %>%
group_by(LOCAL_YEAR) %>%
do({
model <- lm(.$yld ~ .$sev)
tidy_model <- tidy(model)
confint_model <- confint(model)
bind_cols(tidy_model, confint_model)
})
r_regression = r_regression |>
filter(term %in% c("(Intercept)",".$sev"))
r_regression[r_regression$term== "(Intercept)",c("parameters")] <- "Intercept"
r_regression[r_regression$term== ".$sev",c("parameters")] <- "Slope"
i <- 1
while (i <= nrow(r_regression)) {
if (r_regression$parameters[i] == "Slope" && r_regression$estimate[i] > 0) {
# Remove a linha do Slope e a linha do Intercept correspondente
r_regression2 <- r_regression2[-c(i, i - 1), ]
# Atualiza o índice, pois duas linhas foram removidas
i <- i - 2
}
i <- i + 1
}
while (i <= nrow(r_regression)) {
if (r_regression$parameters[i] == "Slope" && r_regression$estimate[i] > 0) {
# Remove a linha do Slope e a linha do Intercept correspondente
r_regression2 <- r_regression2[-c(i, i - 1), ]
# Atualiza o índice, pois duas linhas foram removidas
i <- i - 2
}
i <- i + 1
}
